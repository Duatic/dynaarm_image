name: Create and publish a Docker image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: duatic/dynaarm_image

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read        # Needed for GitVersion
      packages: write       # Needed to push to GHCR
      id-token: write       # Needed for OIDC in some registry setups

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main          # Ensure we're on a real branch
          fetch-depth: 0     # Required for GitVersion to access full history

      - name: Debug Git State (if GitVersion fails)
        run: |
          git status
          git log --oneline -n 5 || echo "No commits?"
          git describe --tags || echo "No tags found"
          git branch -a

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Force branch context (avoid detached HEAD)
        run: |
          git checkout -B main

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
          versionSpec: '6.0.x'

      - name: Determine GitVersion
        id: version_step
        uses: gittools/actions/gitversion/execute@v3.1.1
        with:
          overrideConfig: |
            next-version: 1.0.0
            mode: Mainline

      - name: Show resolved version
        run: |
          echo 'GitVersion: ${{ steps.version_step.outputs.majorMinorPatch }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.jazzy
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version_step.outputs.majorMinorPatch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

name: Build and publish Docker image with versioning

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: duatic/dynaarm_image

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # Needed to commit back version.txt
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read version.txt
        id: read_version
        run: |
          version=$(cat version.txt)
          echo "VERSION_TXT=$version" >> $GITHUB_ENV
          echo "Using version.txt = $version"

      - name: Determine final version
        id: versioning
        run: |
          VERSION=$VERSION_TXT
          echo "Checking if version $VERSION exists in GHCR..."

          AUTH_HEADER="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          ACCEPT_HEADER="Accept: application/vnd.oci.image.manifest.v1+json"
          REPO="ghcr.io/${{ github.repository_owner }}/dynaarm_image"

          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "$AUTH_HEADER" \
            -H "$ACCEPT_HEADER" \
            "https://ghcr.io/v2/${{ github.repository_owner }}/dynaarm_image/manifests/$VERSION")

          if [ "$response" = "200" ]; then
            echo "Version already exists. Bumping patch..."
            IFS='.' read -r major minor patch <<< "$VERSION"
            patch=$((patch + 1))
            VERSION="$major.$minor.$patch"
            echo "Bumped to version $VERSION"
            echo "BUMPED=true" >> $GITHUB_ENV
          else
            echo "Version $VERSION is new."
            echo "BUMPED=false" >> $GITHUB_ENV
          fi

          echo "FINAL_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.jazzy
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FINAL_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Update version.txt if bumped
        if: env.BUMPED == 'true'
        run: |
          echo "${{ env.FINAL_VERSION }}" > version.txt
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add version.txt
          git commit -m "Bump version.txt to ${{ env.FINAL_VERSION }}"
          git push

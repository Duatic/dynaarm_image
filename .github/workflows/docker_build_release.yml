name: Manual Docker release with auto versioning

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: duatic/dynaarm_image

jobs:
  docker-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get latest GitHub release
        id: get_latest
        run: |
          latest=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)

          if [[ "$latest" == "null" || -z "$latest" ]]; then
            version="1.0.0"
          else
            base=${latest#v}
            IFS='.' read -r major minor patch <<< "$base"
            patch=$((patch + 1))
            version="${major}.${minor}.${patch}"
          fi

          echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
          echo "Final version will be: $version"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.jazzy
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          name: Release v${{ env.RELEASE_VERSION }}
          body: |
            Automated Docker release v${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

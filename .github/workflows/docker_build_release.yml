name: Publish versioned Docker image and GitHub release

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: duatic/dynaarm_image
  VERSION_FILE: version.txt

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # needed to push version.txt and create release
      packages: write        # needed for GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version.txt
        id: read_version
        run: |
          version=$(cat ${{ env.VERSION_FILE }})
          echo "VERSION_TXT=$version" >> $GITHUB_ENV

      - name: Determine next available version
        id: calculate_version
        run: |
          AUTH_HEADER="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          ACCEPT_HEADER="Accept: application/vnd.oci.image.manifest.v1+json"
          BASE_VERSION="${VERSION_TXT}"
          FINAL_VERSION="$BASE_VERSION"

          echo "Checking GHCR for base version: $BASE_VERSION"

          attempt=0
          while true; do
            code=$(curl -s -o /dev/null -w "%{http_code}" \
              -H "$AUTH_HEADER" \
              -H "$ACCEPT_HEADER" \
              "https://ghcr.io/v2/${{ github.repository_owner }}/dynaarm_image/manifests/$FINAL_VERSION")

            if [[ "$code" == "200" ]]; then
              echo "Version $FINAL_VERSION exists. Trying next patch..."
              IFS='.' read -r major minor patch <<< "$BASE_VERSION"
              patch=$((patch + attempt + 1))
              FINAL_VERSION="$major.$minor.$patch"
              attempt=$((attempt + 1))
            else
              break
            fi
          done

          echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV
          echo "Version to use: $FINAL_VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.jazzy
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FINAL_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.FINAL_VERSION }}
          name: Release v${{ env.FINAL_VERSION }}
          body: |
            Automated release for Docker image version v${{ env.FINAL_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version.txt
        run: |
          echo "${{ env.FINAL_VERSION }}" > ${{ env.VERSION_FILE }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ env.VERSION_FILE }}
          git commit -m "Update version.txt to ${{ env.FINAL_VERSION }}"
          git push

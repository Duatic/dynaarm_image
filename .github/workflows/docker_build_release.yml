name: Create and publish a Docker image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: duatic/dynaarm_image
  VERSION_FILE: version.txt

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for pushing updated version.txt
      packages: write  # for pushing to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version from version.txt
        id: read-version
        run: |
          version_txt=$(cat ${{ env.VERSION_FILE }})
          echo "VERSION_TXT=${version_txt}" >> $GITHUB_ENV

      - name: Check if tag exists in GHCR
        id: check-tag
        run: |
          image=ghcr.io/${{ github.repository_owner }}/dynaarm_image
          version=${{ env.VERSION_TXT }}

          status=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://ghcr.io/v2/${{ github.repository_owner }}/dynaarm_image/manifests/${version}")

          if [ "$status" = "200" ]; then
            echo "Version already exists, will bump patch."
            IFS='.' read -r major minor patch <<< "${version}"
            patch=$((patch + 1))
            new_version="${major}.${minor}.${patch}"
            echo "FINAL_TAG=${new_version}" >> $GITHUB_ENV
            echo "BUMPED_VERSION=true" >> $GITHUB_ENV
          else
            echo "Version is new."
            echo "FINAL_TAG=${version}" >> $GITHUB_ENV
            echo "BUMPED_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.jazzy
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FINAL_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Update version.txt if bumped
        if: env.BUMPED_VERSION == 'true'
        run: |
          echo "${{ env.FINAL_TAG }}" > ${{ env.VERSION_FILE }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ env.VERSION_FILE }}
          git commit -m "Bump version to ${{ env.FINAL_TAG }}"
          git push

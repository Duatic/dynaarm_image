# syntax=docker/dockerfile:1.4

############################
# Stage 1: Build
############################
FROM docker.io/osrf/ros:jazzy-desktop-full as builder

ENV SHELL=/bin/bash
ENV ROS_AUTOMATIC_DISCOVERY_RANGE=SUBNET
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
ENV PIP_BREAK_SYSTEM_PACKAGES=1
ENV TZ="Europe/Berlin"
ENV ROS_WS=/ros2_ws
ENV DISPLAY=:0
ENV QT_X11_NO_MITSHM=1
ENV REPOS_LIST=repos.list

# Create workspace
RUN mkdir -p ${ROS_WS}/src
WORKDIR ${ROS_WS}

# Install dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
    git \
    wget \
    curl \
    gnupg \
    lsb-release \
    apt-transport-https \
    unzip \
    gpg \
    ccache \
    build-essential \
    cmake \
    pkg-config \
    libeigen3-dev \
    libboost-all-dev \
    liburdfdom-dev \
    liburdfdom-headers-dev \
    liboctomap-dev \
    python3-pip \
    python3-dev \
    python3-numpy \
    python3-vcstool \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-pandas \
    ros-$ROS_DISTRO-rmw-cyclonedds-cpp \
    ros-$ROS_DISTRO-rqt-runtime-monitor \
    ros-$ROS_DISTRO-rqt-robot-monitor \
    ros-$ROS_DISTRO-plotjuggler \
    ros-$ROS_DISTRO-plotjuggler-ros \
    ros-$ROS_DISTRO-ros2controlcli \
    ros-$ROS_DISTRO-joy \
    ros-$ROS_DISTRO-rosbridge-suite \
 && apt-get clean

# Install MuJoCo 3.0.0
RUN mkdir -p /root && \
    wget -q https://github.com/deepmind/mujoco/releases/download/3.0.0/mujoco-3.0.0-linux-x86_64.tar.gz -O /tmp/mujoco.tar.gz && \
    tar -xzf /tmp/mujoco.tar.gz -C /root && \
    rm /tmp/mujoco.tar.gz

# Install Pinocchio manually
RUN git clone --recursive https://github.com/stack-of-tasks/pinocchio.git /tmp/pinocchio && \
    mkdir -p /tmp/pinocchio/build && \
    cd /tmp/pinocchio/build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \
             -DBUILD_PYTHON_INTERFACE=OFF -DBUILD_UNIT_TESTS=OFF && \
    make -j$(nproc) && make install && \
    rm -rf /tmp/pinocchio

# colcon mixin setup
COPY scripts/colcon_mixin.sh /root/
RUN sed -i 's/\r$//' /root/colcon_mixin.sh && chmod +x /root/colcon_mixin.sh
RUN bash /root/colcon_mixin.sh && colcon mixin update default

# Clone repos
COPY ../${REPOS_LIST} /root/${ROS_WS}/
RUN vcs import ${ROS_WS}/src < /root/${ROS_WS}/${REPOS_LIST}

# rosdep
RUN apt-get update && rosdep fix-permissions
RUN rosdep update
RUN rosdep install -r --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y

# Build
RUN . /opt/ros/$ROS_DISTRO/setup.sh && \
    export CMAKE_PREFIX_PATH=/usr/local:$CMAKE_PREFIX_PATH && \
    colcon build --symlink-install --continue-on-error

############################
# Stage 2: Runtime
############################
FROM docker.io/osrf/ros:jazzy-desktop-full

ENV SHELL=/bin/bash
ENV ROS_AUTOMATIC_DISCOVERY_RANGE=SUBNET
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
ENV TZ="Europe/Berlin"
ENV ROS_WS=/ros2_ws
ENV DISPLAY=:0
ENV QT_X11_NO_MITSHM=1
ENV LD_LIBRARY_PATH=/opt/ros/$ROS_DISTRO/lib:/usr/local/lib:$LD_LIBRARY_PATH

# Install RMW implementation again in runtime image
RUN apt-get update && apt-get install -y ros-${ROS_DISTRO}-rmw-cyclonedds-cpp

# Copy full workspace from builder
COPY --from=builder ${ROS_WS} ${ROS_WS}
COPY --from=builder /root/mujoco-3.0.0 /root/mujoco-3.0.0

WORKDIR ${ROS_WS}

CMD ["/bin/bash", "-c", "source /opt/ros/$ROS_DISTRO/setup.bash && source /ros2_ws/install/setup.bash && exec /bin/bash"]

